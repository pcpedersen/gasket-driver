name: Makefile CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-24.04

    steps:
      - name: Decode and inspect GPG key
        env:
          PRIVATE_GPG_KEY: ${{ secrets.PRIVATE_GPG_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          echo "$PRIVATE_GPG_KEY" | base64 --decode > private.key
          head -n 10 private.key
          stat --format="%s bytes" private.key
          gpg --batch --import private.key

      - name: Prepare kernel module signing keys
        env:
          RSA_MODULE_SIGNING_KEY: ${{ secrets.RSA_MODULE_SIGNING_KEY }}
          RSA_MODULE_SIGNING_CERT: ${{ secrets.RSA_MODULE_SIGNING_CERT }}
        run: |
          echo "$RSA_MODULE_SIGNING_KEY" | base64 --decode > $HOME/signing_key.pem
          head -n 2 $HOME/signing_key.pem
          echo "$RSA_MODULE_SIGNING_CERT" | base64 --decode > $HOME/signing_key.x509
          head -n 2 $HOME/signing_key.x509
          ls -latr $HOME/signing_key.*

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install build dependencies from control file
        run: |
          sudo apt-get update
          sudo apt-get install -y equivs devscripts
          mk-build-deps --install --root-cmd sudo --tool "apt-get -y" debian/control

      - name: Download and install dpkg-sig
        run: |
          wget http://ftp.de.debian.org/debian/pool/main/d/dpkg-sig/dpkg-sig_0.13.1+nmu4_all.deb
          sudo apt install ./dpkg-sig_0.13.1+nmu4_all.deb
          rm ./dpkg-sig_0.13.1+nmu4_all.deb
          
      # ──────────────────── FULL APT CACHE SETUP ───────────────────────────────
      # Cache all installed APT packages properly
      - name: Gather installed package list
        id: pkglist
        run: |
          pkgs=$(apt list --installed 2>/dev/null | awk -F/ 'NR>1{print $1}' | tr '\n' ' ')
          echo "packages=$pkgs" >> $GITHUB_OUTPUT

      - name: Download all .debs into APT cache
        run: |
          sudo apt-get update
          echo "${{ steps.pkglist.outputs.pkgs }}" \
            | xargs --no-run-if-empty sudo apt-get --reinstall --download-only install -y

      - name: Cache APT packages
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: ${{ steps.pkglist.outputs.packages }}
          version: full-apt-cache-${{ runner.os }}
      # ────────────────────────────────────────────────────────────────────────────────

      - name: Build debian package
        run: debuild -us -uc -tc -b

      - name: Move .deb file locally
        run: mv ../*.deb ./

      - name: Sign the .deb file
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: dpkg-sig --sign builder \
             --gpg-options "--batch --yes --passphrase=$GPG_PASSPHRASE --pinentry-mode loopback" ./*.deb

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gasket-deb-${{ github.run_number }}
          path: ./*.deb
